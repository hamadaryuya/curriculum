■ 開発
ウォーターフォール開発
　　開発を各工程に分けて進めるが、次のフェーズにいくと、後戻りがしづらい
　　クライアントに丁寧なヒアリング調査がいる。
　　スケジュールの予定が立てやすい。不足の事態に対応しづらい。
　　品質重視。プロジェクト規模が大きい。

アジャイル開発
　　クライアントの要望に素早く答えることに適している。システムの優先順位も開発メンバーが
　　決めることが多いので、スクラムというチームを組むことが多い。
　　アジャイル型開発は1つの機能ごとに、企画、実装、設計、テストという流れを通して進めていく。

マイグレーション
　　プログラムやデータ、OSなどの環境を移行すること。
　　古いものから新しいものに変えること。

デグレーション
　　前の方が良かった状態のこと。アップデートしたのに、品質が劣化するなど

デプロイ
　　使える状態にしてあげること。本番環境にデプロイするなど。

コンフリクト
　　複数のプログラムが同じデータを使おうとした時などに生じるぶつかり。矛盾。

環境
開発環境（ローカル）
　　自分のパソコンの中にある仮想環境のこと。

検証環境（ステージング）
　　開発環境で作られたシステムをテストするための環境。
　　分けることで、開発作業と並行して進めることができる。

本番環境
　　システムが実際に稼働している環境。デプロイをすることで、本番環境にできる。

設計書／仕様書
　　ソフトウェアをどうやって作成するかというのが、設計書　過程を記したもの
　　仕様書は、何を作るかという結果が書かれている。

要件定義　　
　　要件定義は、要求をどのようにシステム化するかをまとめた開発の土台となるもの。

基本設計書
　　ソフトウェアの動きを外から観たさいにどういう動きをするのか

詳細設計書
　　基本設計で決めたその動きをどうやって実現できるか

テスト
単体テスト（UT）
　　機能単体が正常に動いているかを確認する。ログイン機能の確認など。
結合テスト（CT／IT）
　　単体テストで確認した機能同士を連携させて、予期した動きを行うかを確認。
総合テスト（ST）
　　システム連結させ、全体を動かしてエラーなく作動するかを確認する
　　受入テストは本番環境でもエラーが起きないかを確認する。

エビデンス／証跡
　　主にシステム開発のテスト工程で、システムの不具合の証拠となるデータや成功となるデータのこと
　　
データパッチ
　　ソフトウェアを構成するプログラムやデータの更新修正するために、新しい版との相違点を抜き出した
　　データのことをパッチ。
　　要は、プログラムが大きくなるに連れて、修正点が発見した場合、それらを全て変更することは困難になる
　　ので、修正点を抜き出してパッチを作成し、それをプログラムに加える。
　　ソフトに変更を加えるために用意された後付けのプログラム

Access
　　機器やソフトウェア、システム、情報などを利用可能な状態にすること。その状態。

マクロ
　　事前に操作手順などを記録しておいて、その記録した内容をまとめて実行してくれる機能のこと

VBA（Visual Basic for Applications）
　　マイクソソフトオフィスのアプリ拡張機能　複雑な処理の自動化ができる。マクロを利用して、記録した操作を行ってくれる

GAS（Google Apps Script）
　　Googleが開発しているプログラミング言語で、JavaScriptがベース。
　　Googleの提供サービスと連携して、メールの自動返信などができるようになる。

API（アプリケーション　プログラミング　インターフェース）
　　アプリケーションとかソフトウェアの一部を公開して、他の人が開発したソフトウェアと機能を共有できる。

WEB API
　　Web上に公開されていて、外部から呼び出して利用可能なAPI。
　　GoogleMapなど。Twitterとかぐるなびとか、楽天とかもそう。

●REST API　（REpresentational State Transfer）
　　Webシステムを外部から呼び出すときの規約の種類の1つ。主にHTTP標準の4つのメソッド。POST GET PUT ,DELETPOST GET PUT ,DELETを使うことで、
　　シンプルで一貫性を持たせられる。
　　RESTはプロトコルや手続きを自前で書いてHTTP通信のPOSTなどを利用してデータのやり取りを行うもの
　　POSTメソッドで、JSON形式でデータを受け取ることなど。
　　互換性が上がるというメリットが存在する。

SOAP
　　異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、
　　連携して動作するための通信プロトコル（規約）の一つ。メッセージの記述にXMLを、データ伝送に
　　主にHTTPを用い、Webサービスの提供や利用に適しているとされる。
　　
Ajax 
　　Asynchronous JavaScript + XMLの略。
　　非同期にサーバーとの間の通信を行うこと。Google　Mapとかみたいなやつ。
　　最近は、XMLの代わりにJSONも使われているらしい。
　　
XML（Extensible Markup Language）
　　マークアップ言語の1つ。データのやりとりで、データにタグをつけることができる。
　　どのデータがどの要素かをすぐに判断ができる。

JSON（JavaScript Object Notation）
　　データ交換フォーマット。人間も読みやすい。Javascriptの文法に沿っている。
　　
ステータスコード
　　HTTP Status Codeのことで、HTMLを表示する前に、ブラウザが受信する３桁の番号。
　　２００が成功　４０４が見つけられない　５００はサーバーエラー

クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
　　そもそもオリジンとは、スキーム、ホスト、ポートを組み合わせたもののことをさす。
　　要は、HTMLを読み込んだサーバーのことをさす。
　　http://www.exsample.com:80/index.htmlのURLを例にすると

　　スキーム ＝ http://
　　ホスト ＝ www.exsample.com
　　ポート ＝ 80 (ポート番号「80」は省略可なので普段見かけることは少ない)

　　CORSとは、別オリジンのリソースへアクセスできるようにするためのルール

バリデーション
　　入力内容が条件を満たしているかどうかをチェックするためのもの

データ連携
　　企業内外にある様々なデータやシステムを連携させて、データを資産として運用すること

Daemon
　　Unix系のOSの常駐プログラムのこと。要は、裏で仕事が来ると対応し、終わると待機状態に戻る。
　　後ろにdが来ると、httpdなど。存在しないメールアドレスに送ると、メーラーエラーとして返却されるやつなど。
　　
CRON
　　Unix系のOSに入っているプログラムで、事前に指示を出しておくと、その時間になった時に指定していたプログラムを
　　動かしてくれる。
　　crontabを使用する。
　　
バッチ
　　どこかのタイミングで、まとめて実施される処理のこと。
　　すぐやらなくても良い処理を溜めておいて、どこかのタイミングで一気に行うイメージ。
　　自動化することができ、忙しく無い時に実行することができる。データ集計とかバックアップなど。

ログ
　　コンピューター上の記録のこと。ログにもアクセスログ、エラーログ、デバッグログなどがある。
　　
CSV（（comma separated values)
　　書式かデータか、ファイルのことをさす。カンマで区切る値のこと。CSV形式は項目間をカンマで区切り並べる。
　　データは、テキストデータをカンマで区切ったもの。ファイルは中身がCSVデータなファイル。カンマで区切られたテキストファイル。
　　
TSV
　　CSVがカンマでテキストデータを区切っていたものに対して、TSVはタブで区切っているデータのこと。
　　
プルリクエスト（マージリクエスト）
　　Githubにおけるブランチを別のブランチにマージする時に、送る会話の起点的なもの。
　　要は、こんな感じで機能作ったけど、修正とかある？的なもの。

■ チケット管理ツール　要はプロジェクトを管理するタスク管理ツールのこと。
asana
　　未着手と、完了の2つの軸で管理できるリスト形式と、タスクをステータスごとに管理できるカンバン形式が特徴。
　　新しい機能もどんどん追加されていく。動作が速い。無料版と有料版が存在する

Backlog
　　有料のチームタスク管理ツール。タスクを親子課題として関連付けすることが可能。チームのソースコードを管理することができる。
　　金額高め。
　　
Jooto
　　無料プランも存在。金額は安め。GoogleカレンダーやSlack、Chat workなどと連携することが可能。
　　カンバン形式で通知機能も存在する。

Readmine
　　無料で使用することができる。拡張機能が備わっている。様々なブラウザで操作することができる。
　　ただ、環境構築を行う必要があり、ガントチャートが使いにくい。

Trello
　　無料版と有料版が存在。ただ、無料版でも結構使える。カンバン方式で使用することができて、ボード、リスト、カードから
　　京成されている。カード移動で操作を行う。直感的に操作を行うことができる。

■ バージョン管理　システムの変更管理
集中型
　　中央集中型システム ⇒ Subversion(SVN)，Concurrent Version System(CVS)などがある
　　複数の作業者がが同じファイル郡を扱う。要は、1つのサーバーでシステムが稼働している。要は、リポジトリを有しているのはサーバーのみ。
　　同時ログインにより、競合が発生する可能性がある。サーバーに接続できない場合は最新のバージョンを取得することができない。
　　この問題を解決するために、ブランチとマージが存在する。

分散型
　　分散型システム ⇒ Git, Mercurial, Bazaar, Fossil
　　主となるサーバーが存在しない。それぞれに独立したリポジトリが存在する。
　　一応、中央サーバーが存在するが、全ての作業者の変更を追うためのバックアップ的な役割になる。

Github
　　Gitを利用した開発者を支援するWebサービス。分散型。
　　
Backlog
　　SVNとGitを利用してバージョン管理を行うことができる。
　　
SourceTree
　　GitとMercurialに対応しているGUIのバージョン管理システム。分散
　　
Tortoise SVN
　　集中型のSubversionのWindowsのGUI。

Git Flow
　　コンフリクトのミスやマージのミスを防ぐたの開発手法、そしてツールの名前。
　　master, release, develop, feature, hot-fixの5つのブランチを使い分けて、開発を進める。
　　feature……開発をおこなうためのブランチで、個々の機能の実装やバグの解決をおこなう
　　develop……開発をおこなうためのブランチ
　　release……リリース前に準備、微調整をおこなうブランチ
　　master……リリースしたデータを置いておくブランチ
　　hot-fix……リリースされているデータに、緊急の修正対応をするためのブランチ

■ FW／ライブラリ
FW
　　フレームワークは、全体の処理の流れが実装されていて、その具体的な処理の一部を作成して当てはめる。

Spring Framework
　　Javaの開発環境で使用できるオープンソースのフレームワーク
　　AOPとは「Aspect Orientation Programming」」の概念で使用できる。アスペクト指向プログラミング。
　　要は、システム内で行われる処理を抽出して集約する。まあ、シンプルにまとめることができる。コードが短くなる。
　　拡張性に優れている。

Struts
　　MVCモデルが採用されたフレームワーク。
　　
JSF（Java Server Faces）
　　JavaでWebアプリケーションを作成するためのフレームワーク。
　　基本的なプレゼンテーションコンポーネントが用意されている。ボタンとかテキストフィールドとか
　　
ライブラリ
　　使いたい部品が入っている道具箱のようなイメージ。

Bootstrap
　　オープンソース。
　　Webサイト構築用のCSSひな形セット。いくつかのCSSファイルとJavaScriptファイル

Flyway
　　オープンソースのデータベースマイグレーションツール。要は、現在のデータベースの状態が分からなくなるようなことを防ぐ。

Jackson
　　Javaで使われるJSONライブラリ。JAVAオブジェクトをJSONに置き換えることができる。Webサービス（TwitterとかGoogleなど）で
　　用いられるJSONのデータとやりとりが楽になる。

jQuery
　　JavaScriptで作成されたライブラリ。javascriptの記述を簡単にすることができる。
　　ブラウザの違いを意識することがなく使用することができる。HTMLの部品であるDOMの操作が簡単にすることができる。
　　DOMはjavascriptにおけるHTMLの要素を操作するための仕組みのこと。
　　Ajaxの処理が簡単にすることができる。
　　
Junit
　　javaで開発された、単体テストを行うためのソフトウェア。

Log4j
　　javaで作成したプログラムが正しく動作しているのかどうかを検証する　　

Lombok
　　javaの冗長なソースを簡潔にしてくれるオープンソースのライブラリ。

ORM
　　オブジェクト関連マッピングのこと。
　　RDBのレコードをオブジェクトとして扱えるようにする。RailsにおけるActiveRecordのこと。
　　要は、モデル間の関係性を表し、継承してくれる。

■ 連絡ツール
ChatWork
　　無料と有料版が存在し、タスク管理ツールが存在する。

Slack
　　開発環境問わず、スマホでもパソコンでも利用できて、他のサービスとの連携もでき、オリジナルの絵文字を作成することができる。
　　
IP Messenger
　　社内LANを用いたメッセンジャーで、情報漏洩の心配が無い。社内だけで使うのであれば良い。
　　
■ Java

Javadoc
　　javaで使われるコメントで、プログラムについて説明しているドキュメントをソースコードに埋め込むことができる。

アノテーション
　　開発者がソースコードに自由にコメントをすると統一性がなくなってしまう現象を防ぐ注釈のようなもの。
　　
メモリ管理
ヒープ
　　動的に確保と開放を繰り返し行うメモリ領域のこと。newで生成した時に確保する動的メモリ。
　　javaではヒープ領域上に確保したメモリ管理システムのこともヒープという。
　　ヒープの使い方がよく無いと、未使用領域がバラバラに分断されるイメージ。山積みされているデータがぐちゃぐちゃで
　　分断されるイメージ？
　　この状態をフラグメーション状態というが、その状態を解決するのがデフラグ。デフラグメーション（最適化）
GC
　　ガベージコレクションのことで、不要になったメモリ領域を自動的に開放する機能。

GoF　ゴーフ
　　ギャング・オブ・フォーの略。オブジェクト指向における再利用のためのデザインパターン。
　　23個のデザインパターンがある。

デザインパターン
　　よくある問題と、それに対処するための設計のようなイメージ。
　　
■ その他
オブジェクト指向
　　分業や共同の作業がしやすい。モノが１つ１つ独立しているため。部品の交換なども用意になる。改良や修正が可能になる。
　　
バッチ処理
　　一定量のデータを集め、一括処理する。

コンパイル
　　プログラムで書いたソースコードをコンピューター上で理解できる実行可能なオブジェクトコードに変換すること
　　要は機械語に変換している。

カバレッジ
　　影響範囲、適用範囲、どこまでカバーしているかの範囲。テスト全体のうち、これくらいの確認が終わったよという割合がカバレッジ。
　　全体の使用に対してどれくらいテストが行えているかどうかのk買う人を表している。

プラットホーム
　　アプリケーションを実行したりデータを保存することができるものはプラットフォームと呼ぶことができる。
　　クラウド型プラットフォームは、GoogleDriveやGmailなどアプリケーションの実行やデータの保存をWeb上で展開しているもの。
　　クラウドは、ユーザーがインフラやソフトウェアを保持していなくても必要な時に必要な分だけサービスを受けれるような状態。